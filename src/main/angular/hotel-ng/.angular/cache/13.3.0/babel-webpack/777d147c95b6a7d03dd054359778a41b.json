{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst COOKIE_CONSENT = 'allowed-cookie-banner';\nconst COOKIE_CONSENT_EXPIRE_DAYS = 180;\nexport let CookieManager = /*#__PURE__*/(() => {\n  class CookieManager {\n    constructor() {\n      this.isConsented = false;\n      this.isConsented = this.getCookie(COOKIE_CONSENT) === '1';\n    }\n\n    getCookie(name) {\n      let ca = document.cookie.split(';');\n      let caLen = ca.length;\n      let cookieName = `${name}=`;\n      let c;\n\n      for (let i = 0; i < caLen; i += 1) {\n        c = ca[i].replace(/^\\s+/g, '');\n\n        if (c.indexOf(cookieName) == 0) {\n          return c.substring(cookieName.length, c.length);\n        }\n      }\n\n      return null;\n    }\n\n    deleteCookie(name) {\n      this.setCookie(name, '', -1);\n    }\n\n    setCookie(name, value, expireDays, path = '') {\n      let d = new Date();\n      d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\n      let expires = `expires=${d.toUTCString()}`;\n      let cpath = path ? `; path=${path}` : '';\n      document.cookie = `${name}=${value}; ${expires}${cpath}`;\n    }\n\n    consent(isConsent, e) {\n      if (!isConsent) {\n        return this.isConsented;\n      } else if (isConsent) {\n        this.setCookie(COOKIE_CONSENT, '1', COOKIE_CONSENT_EXPIRE_DAYS);\n        this.isConsented = true;\n        e.preventDefault();\n      }\n    }\n\n  }\n\n  CookieManager.ɵfac = function CookieManager_Factory(t) {\n    return new (t || CookieManager)();\n  };\n\n  CookieManager.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CookieManager,\n    factory: CookieManager.ɵfac,\n    providedIn: 'root'\n  });\n  return CookieManager;\n})();","map":null,"metadata":{},"sourceType":"module"}