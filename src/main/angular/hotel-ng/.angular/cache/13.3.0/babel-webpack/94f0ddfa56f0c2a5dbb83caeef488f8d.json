{"ast":null,"code":"import { RestServiceEnvUrl } from 'src/app/rest-service-env-url';\nimport { EnvSingleton } from './env-singleton';\nimport * as i0 from \"@angular/core\";\nexport const environment = {\n  production: true\n};\nexport class Environment {\n  constructor() {}\n\n  static getHomeHost() {\n    if (!this.singleton.homeHost) this.singleton.homeHost = RestServiceEnvUrl.getHostUrl('home');\n    return this.singleton.homeHost;\n  }\n\n  static getHotelHost() {\n    if (!this.singleton.hotelHost) this.singleton.hotelHost = RestServiceEnvUrl.getHostUrl('hotel');\n    return this.singleton.hotelHost;\n  }\n\n  static getLoginHost() {\n    if (!this.singleton.loginHost) this.singleton.loginHost = RestServiceEnvUrl.getHostUrl('login');\n    return this.singleton.loginHost;\n  }\n\n  static getUserManagerHost() {\n    if (!this.singleton.userMngHost) this.singleton.userMngHost = RestServiceEnvUrl.getHostUrl('user-management');\n    return this.singleton.userMngHost;\n  }\n\n}\nEnvironment.singleton = EnvSingleton.getInstance();\n\nEnvironment.ɵfac = function Environment_Factory(t) {\n  return new (t || Environment)();\n};\n\nEnvironment.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Environment,\n  factory: Environment.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module"}