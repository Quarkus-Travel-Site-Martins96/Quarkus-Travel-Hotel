{"version":3,"sources":["./src/app/hotel-view/hotel-view.component.ts","./src/app/hotel-view/hotel-view.component.html","./src/app/gallery-view/gallery-view.component.ts","./src/app/gallery-view/gallery-view.component.html","./src/app/toolbar/toolbar.component.ts","./src/app/toolbar/toolbar.component.html","./src/environments/environment.ts","./src/app/rest-service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/vo/interface-objects.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\r\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\r\nimport { host } from '../../environments/environment';\nimport { RestService } from '../rest-service';\r\nimport { HotelVO } from '../vo/interface-objects';\r\n\nconst hotelUrl = host + \"/hotel/info/\";\n\n@Component({\n  selector: 'app-hotel-view',\n  templateUrl: './hotel-view.component.html',\n  styleUrls: ['./hotel-view.component.css']\n})\nexport class HotelViewComponent implements OnInit {\n\t\n\t@Input()\n\thotelId: string;\n\t\r\n\tsub: Subscription;\r\n\terror: string;\n\thotel: HotelVO;\n\t\n    constructor(private rest: RestService) {\n        this.rest = rest;\n        this.hotel = new HotelVO();\n    }\n    ngOnInit() {\n        if (this.hotel || this.hotel === new HotelVO()) {\n            if (this.sub)\n                this.sub.unsubscribe();\n            this.sub = this.rest.sendGet<HotelVO>(hotelUrl + this.hotelId, new HttpHeaders({\n                'content-type': 'application/json'\n            })).subscribe(r => {\n                this.hotel = r.body;\n            }, error => {\n                console.error(error);\n                this.error = error;\n            });\n        }\n    }\n    fakeArray(i: any) {\n        return new Array(i);\n    }\n}","<div class=\"content\">\n\t<div class=\"header\" [style]=\"'background-image: url('+ hotel.previewImage + ');'\">\n\t\t<div _ngcontent-ohh-c12=\"\" class=\"title\">\n\t\t\t<h1>{{ hotel.title }}</h1>\n\t\t</div>\n\t</div>\n\t<div class=\"header2\">\n\t\t<div class=\"header2-content\">\n\t\t\t<div class=\"location\">\n\t\t\t\t<span > {{ hotel.location }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"stars\">\n\t\t\t\t<span> <b>Stars:</b> <span\n\t\t\t\t\t*ngFor=\"let i of fakeArray(hotel.stars)\"> * </span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"body\">\n\t\t<div class=\"description\" [innerHTML]=\"hotel.longDescription\"></div>\n\t</div>\n</div>","import { HttpHeaders } from '@angular/common/http';\r\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\r\nimport { host } from '../../environments/environment';\nimport { RestService } from '../rest-service';\r\nimport { HotelImagesVO } from '../vo/interface-objects';\r\n\nconst hotelUrl: string = host + \"/hotel/images/\";\n\n@Component({\n  selector: 'app-gallery-view',\n  templateUrl: './gallery-view.component.html',\n  styleUrls: ['./gallery-view.component.css']\n})\nexport class GalleryViewComponent implements OnInit {\r\n\t\r\n\t@Input()\r\n\thotelId: string;\n\t\r\n\tsub: Subscription;\r\n\terror: string;\n\timages: HotelImagesVO;\n\t\n    constructor(private rest: RestService) {\n        this.rest = rest;\n        this.images = new HotelImagesVO();\n    }\n\t\n    ngOnInit() {\n        if (this.images || this.images === new HotelImagesVO()) {\n            if (this.sub)\n                this.sub.unsubscribe();\n            this.sub = this.rest.sendGet<HotelImagesVO>(hotelUrl + this.hotelId, new HttpHeaders({\n                'content-type': 'application/json'\n            })).subscribe(r => {\n                this.images = r.body;\n            }, error => {\n                console.error(error);\n                this.error = error;\n            });\n        }\n    }\r\n\t\n    fakeArray(i: any) {\n        return new Array(i);\n    }\n}\n","<div class=\"gallery-title\">\r\n\t<h3>Gallery:</h3>\r\n</div>\r\n<div class=\"gallery\">\r\n\t<div class=\"image\" *ngFor=\"let img of images.images\">\r\n\t\t<a [href]=\"img\">\r\n\t\t\t<img [src]=\"img\" alt=\"images.hotelId\">\r\n\t\t</a>\r\n\t</div>\r\n\t<div _ngcontent-ohh-c13=\"\" class=\"image\">\r\n\t</div>\r\n</div>","import { Component } from '@angular/core';\nimport { homePageUrl, loginPageUrl } from 'src/environments/environment';\r\n\n@Component({\n\tselector: 'app-toolbar',\n\ttemplateUrl: './toolbar.component.html',\n\tstyleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent {\n\n\thomeUrl: string = homePageUrl;\n\tloginUrl: string = loginPageUrl;\n\n\tconstructor() { }\n\n\n}\n","<div class=\"toolbar\">\n\t<div class=\"logo\"><a [href]=\"homeUrl\"><span>LOGO</span></a></div>\n\t<div class=\"offer\"><a href=\"/\"><span>OFFERS</span></a></div>\n\t<div class=\"login\"><a [href]=\"loginUrl\"><span>LOGIN</span></a></div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n\nexport const host: string = 'http://localhost:8081';\nexport const homePageUrl: string = 'http://localhost:8080';\nexport const urlHotelBase: string = 'http://localhost:8081';\nexport const loginPageUrl: string = \"http://localhost:7070\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\tsendPostGetRawText(url: string, body: any, headers: HttpHeaders): Observable<HttpResponse<string>> {\r\n\t\t// call\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'text'\r\n\t\t});\r\n\t}\r\n\r\n\tsendPostWithString(url: string, body: string, headers: HttpHeaders): Observable<HttpResponse<any>> {\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t})\r\n\t}\r\n\t\r\n\tsendGet<T>(url: string, headers: HttpHeaders): Observable<HttpResponse<T>> {\r\n\t\treturn this.http.get<T>(url, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component } from '@angular/core';\nimport { homePageUrl } from '../environments/environment'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\t\n\tid: string;\n\t\n\tconstructor() {\n        let urlParams = new URLSearchParams(window.location.search);\n        this.id = urlParams.get('hotel-id');\n        if (!this.id) {\n            window.location.href = homePageUrl;\n        }\n    }\n\t\n}\n","<app-toolbar></app-toolbar>\n<div class=\"content\">\n\t<app-hotel-view [hotelId]=\"id\"></app-hotel-view>\n\t<app-gallery-view [hotelId]=\"id\"></app-gallery-view>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { HotelViewComponent } from './hotel-view/hotel-view.component';\nimport { GalleryViewComponent } from './gallery-view/gallery-view.component';\nimport { HttpClientModule } from '@angular/common/http';\r\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToolbarComponent,\n    HotelViewComponent,\n    GalleryViewComponent\n  ],\n  imports: [\n    BrowserModule,\n\tHttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class HotelVO {\r\n\t\r\n\thotelID: string;\r\n\ttitle: string;\r\n\tshortDescription: string;\r\n\tlongDescription: string;\r\n\tlocation: string;\r\n\tstars: number;\r\n\tpreviewImage: string;\r\n\t\r\n}\r\n\r\n\r\nexport class HotelImagesVO {\r\n\t\r\n\timages: string[];\r\n\thotelId: string;\r\n\t\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}