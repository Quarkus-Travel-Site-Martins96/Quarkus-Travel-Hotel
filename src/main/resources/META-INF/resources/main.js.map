{"version":3,"sources":["./src/app/gallery-view/gallery-view.component.ts","./src/app/gallery-view/gallery-view.component.html","./src/app/toolbar/toolbar.component.ts","./src/app/toolbar/toolbar.component.html","./src/environments/environment.ts","./src/app/rest-service.ts","./src/app/contents/contents.component.ts","./src/app/contents/contents.component.html","./src/app/vo/hotel-vo.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RestService } from '../rest-service';\nimport { HotelImagesVO } from '../vo/hotel-vo';\nimport { host } from '../../environments/environment';\n\n\nconst hotelUrl: string = host + \"/hotel/images/\";\n\n@Component({\n  selector: 'app-gallery-view',\n  templateUrl: './gallery-view.component.html',\n  styleUrls: ['./gallery-view.component.css']\n})\nexport class GalleryViewComponent implements OnInit {\n\timages: HotelImagesVO = new HotelImagesVO();\n\terror: string;\n\n\n\tprivate sub: Subscription;\n\t\n\t@Input()\n\thotelId: string;\n\n\n\tconstructor(private rest: RestService) {\n\n\t}\n\tngOnInit(): void {\n\t\tif (this.images) {\n\t\t\tif (this.sub)\n\t\t\t\tthis.sub.unsubscribe();\n\t\t\t\t\n\t\t\tthis.sub = this.rest.sendGet<HotelImagesVO>(hotelUrl + this.hotelId, new HttpHeaders({\n\t\t\t\t'content-type': 'application/json'\n\t\t\t})).subscribe(r => {\n\t\t\t\tthis.images = r.body;\n\t\t\t}, error => {\n\t\t\t\tconsole.error(error);\n\t\t\t\tthis.error = error;\n\t\t\t});\n\t\t}\n\t}\n\t\n\tpublic fakeArray(i: number): number[] {\n\t\treturn new Array<number>(i);\n\t}\n\t\n}\n\n","<div class=\"gallery-title\">\r\n\t<h3>Gallery:</h3>\r\n</div>\r\n<div class=\"gallery\">\r\n\t<div class=\"image\" *ngFor=\"let img of images.images\">\r\n\t\t<a href = {{img}}>\r\n\t\t\t<img src={{img}} alt={{images.hotelId}}/>\r\n\t\t</a>\r\n\t</div>\r\n</div>","import { Component } from '@angular/core';\nimport { homePageUrl } from 'src/environments/environment';\r\n\n@Component({\n\tselector: 'app-toolbar',\n\ttemplateUrl: './toolbar.component.html',\n\tstyleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent {\n\n\thomeUrl: string = homePageUrl;\n\n\tconstructor() { }\n\n\n}\n","<div class=\"toolbar\">\n\t<div class=\"logo\"><a [href]=\"homeUrl\"><span>LOGO</span></a></div>\n\t<div class=\"offer\"><a href=\"/\"><span>OFFERS</span></a></div>\n\t<div class=\"login\"><a href=\"/\"><span>LOGIN</span></a></div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n\nexport const host: string = \"http://localhost:8081\";\nexport const homePageUrl: string = \"http://localhost:8080\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\tsendPostGetRawText(url: string, body: any, headers: HttpHeaders): Observable<HttpResponse<string>> {\r\n\t\t// call\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'text'\r\n\t\t});\r\n\t}\r\n\r\n\tsendPostWithString(url: string, body: string, headers: HttpHeaders): Observable<HttpResponse<any>> {\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t})\r\n\t}\r\n\t\r\n\tsendGet<T>(url: string, headers: HttpHeaders): Observable<HttpResponse<T>> {\r\n\t\treturn this.http.get<T>(url, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t});\r\n\t}\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\r\nimport { RestService } from '../rest-service';\r\nimport { HotelVO } from '../vo/hotel-vo';\r\nimport { host } from '../../environments/environment';\r\n\r\n\r\nconst hotelUrl: string = host + \"/hotel/info/\";\r\n\n@Component({\n\tselector: 'app-contents',\n\ttemplateUrl: './contents.component.html',\n\tstyleUrls: ['./contents.component.css']\n})\nexport class ContentsComponent implements OnInit {\n\thotel: HotelVO = new HotelVO();\n\terror: string;\n\n\n\tprivate sub: Subscription;\r\n\t\r\n\t@Input()\r\n\thotelId: string;\n\n\n\tconstructor(private rest: RestService) {\n\n\t}\n\tngOnInit(): void {\n\t\tif (this.hotel) {\n\t\t\tif (this.sub)\n\t\t\t\tthis.sub.unsubscribe();\n\t\t\t\t\n\t\t\tthis.sub = this.rest.sendGet<HotelVO>(hotelUrl + this.hotelId, new HttpHeaders({\n\t\t\t\t'content-type': 'application/json'\n\t\t\t})).subscribe(r => {\n\t\t\t\tthis.hotel = r.body;\n\t\t\t}, error => {\n\t\t\t\tconsole.error(error);\n\t\t\t\tthis.error = error;\n\t\t\t});\n\t\t}\n\t}\r\n\t\r\n\tpublic fakeArray(i: number): number[] {\r\n\t\treturn new Array<number>(i);\r\n\t}\r\n\t\r\n}\n","<div class=\"content\">\r\n\t<div class=\"header\" [ngStyle]=\"{'background-image': 'url(' + hotel.previewImage + ')'}\">\r\n\t\t<div class=\"title\">\r\n\t\t\t<h1>{{ hotel.title }}</h1>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"header2\">\r\n\t\t<div class=\"header2-content\">\r\n\t\t\t<div class=\"location\">\r\n\t\t\t\t<span>{{ hotel.location }}</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"stars\">\r\n\t\t\t\t<span> <b>Stars:</b> <span\r\n\t\t\t\t\t*ngFor=\"let i of this.fakeArray(hotel.stars)\"> * </span>\r\n\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"body\">\r\n\t\t<div class=\"description\" [innerHTML]=\"hotel.longDescription\"></div>\r\n\t</div>\r\n\r\n</div>","\r\nexport class HotelVO {\r\n\t\r\n\thotelID: string;\r\n\ttitle: string;\r\n\tlongDescription: string;\r\n\tshortDescription: string;\r\n\tlocation: string;\r\n\tstars: number;\r\n\tpreviewImage: string;\r\n\t\r\n}\r\n\r\n\r\nexport class HotelImagesVO {\r\n\t\r\n\timages: string[];\r\n\thotelId: string;\r\n\t\r\n}","import { Component } from '@angular/core';\nimport { homePageUrl } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\t\n\tpublic id: string;\n\t\n\tconstructor() {\n\t\tlet urlParams = new URLSearchParams(window.location.search);\n\t\tthis.id = urlParams.get('hotel-id');\n\t\tif (!this.id) {\n\t\t\twindow.location.href = homePageUrl;\n\t\t}\n\t}\n\t\n}\n","<!-- Toolbar -->\n<app-toolbar></app-toolbar>\n\n<div class=\"content\" role=\"main\">\n\n  <app-contents [hotelId]=\"id\"></app-contents>\n  <app-gallery-view [hotelId]=\"id\"></app-gallery-view>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { ContentsComponent } from './contents/contents.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GalleryViewComponent } from './gallery-view/gallery-view.component';\r\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tToolbarComponent,\n\t\tContentsComponent,\n\t\tGalleryViewComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tHttpClientModule\n\t],\n\tproviders: [],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}